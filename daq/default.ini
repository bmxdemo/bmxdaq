##
## CONFIGURATION FILE for BMXDAQ
##

## Rules for preserving health:
##
## Never eat yellow snow; donâ€™t insert cutlery into power sockets; order
## not the Monday night fish special and when setting bmxdaq options:
##
## option= value
##       ^^ no space before equal sign, one space after
##
##
debug= 0
captain_hostname= bmxdaq1.phy.bnl.gov
sailor_hostname= bmxdaq2.phy.bnl.gov
sailor_bind= 172.16.1.102
#palantir3.phy.bnl.Card 

## card devices
card1= /dev/spcm1
card2= /dev/spcm0

## gov  mask 1 = Card spcm0, 2 = Card spcm1, 3 = Cards spcm0 and spcm1 
card_mask= 3
## Channel mask 1 = CH1, 2 = CH1, 3 = CH1+CH2 
## Leave on 3, single channel doesn't work.
channel_mask= 3



## sampling rate in Msamples/second
sample_rate= 1100
## do we supply this externally
ext_clock_mode= 1
## what we tell the digi card
## software will do internal conversions
## based on sample_rate above
## Don't change things below, unless you
## know what are you doing.
spc_sample_rate= 1250
spc_ref_clock= 1250

## FFT size = 2**FFT_power.
## this also sets the output rate
FFT_power= 25
## We allocate memory for this many FFT size array
buf_mult= 8

## delay calibration
measure_delay= 0

## number of samples, 0 for forever
nsamples= 0

##terminal, how often to print something.
#print to terminal every ___ packets
print_every= 10

## (only used if wave_nbytes>0)
## use with care -- this is resource intensive
##wave_nbytes= 268435456
wave_nbytes= 0
wave_fname= ../data/wave.bin

## number of cuts
## each cut is a separate averaging of spectra
## They can be overlapping, etc.
n_cuts= 1
## min and max frequency in Mhz, -1 sets max to Nyquist
## Since 16384=2^14, we get 2^{27-14-1}=4096 channels.
## (minus 1 because number of freq is # samples/2)
nu_min0= 0.
nu_max0= -1 
#fft_avg0= 16384;
fft_avg0=  8192;
## Second cut catches tone around 1GHz
##nu_min1= 1399.9950
##nu_max1= 1400.0050
##fft_avg1= 1;

## CUDA settings, don't touch unless you know
## what you are doing
cuda_streams= 6
cuda_threads= 1024

## ADC range in mV
## possible values: 200,500,1000,2500
ADC_range= 200

## If one, don't acutally run the digitizer
simulate_digitizer= 0
## If one, don't run the GPU
dont_process= 0

## We open a new file every this many minutes
## (execept the first one, for 60 we open so that 
## mins==0)
new_file_every= 60

##
## how many records to average
##
average_recs= 32
## number of sigma to classify outliers that will be nulled out (over averaga_recs above with
## our sexy algo
n_sigma_null= 4


##
## Size of ringbuffer in number of FFT_sizes
ringbuffer_size= 64
ringbuffer_force= 1
#xs64

## output patter will save this YYMMDD_HHMM.data
##
## other will add to this pattern
##
root_output_pattern= ../data/%02d%02d%02d_%02d%02d

## this has seconds too
ringbuffer_output_pattern= ../data/%02d%02d%02d_%02d%02d%02d.ring
## interactive output 

# print mean and variance
print_meanvar= 1
# print max power freq for each channel
print_maxp= 1
## tone frequency generation
## if >0 it will try
## to drive the tone generator
fg_nfreq= 0
## port baud rate for talking to FG
fg_port= ttyS0
fg_baudrate= 115200
## switch every this many packets (determined by FFTSIZE and sampling
## rate)
fg_switchevery= 10
## frequencies 0..fg_nfreq-1
fg_freq0= 1200
fg_freq1= 1400
fg_freq2= 1500
## amplitudes in Vpp
fg_ampl0= 0.2
fg_ampl1= 0.2
fg_ampl2= 0.2


## labjack settings
lj_Non= 256
lj_Noff= 1024

#20000

